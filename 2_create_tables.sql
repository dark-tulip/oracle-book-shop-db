/* СКРИПТ ЗАПУСКАЕМ ОТ BOOK_ADMIN */

CONNECT book_admin/123;

-- ВСЕ Созданные таблицы уже будут созданы в табличном пространстве perm_ts
-- доступ к таблицам от SYS происходит как BOOK_ADMIN.BOOK, при этом просто book от SYS это уже другая таблица

-- Различия между sql server
-- Убрали схемы - теперь схема это пользователь создавший таблицу
-- тип данных VARCHAR теперь как NVARCHAR2
-- тип данных INT, BIGINT теперь как NUMERIC, NUMBER
-- IDENTITY(1,1) теперь как  GENERATED ALWAYS AS IDENTITY
-- нет запяой на последнем столбце таблицы (при создании)

-- GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL PRIMARY KEY


---Создание таблицы GENRE - жанры
CREATE TABLE genre
(
		genre_id   NUMERIC GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		name_genre NVARCHAR2(30)
) TABLESPACE perm_ts;


---Создание таблицы BOOK - книги
CREATE TABLE book
(
		book_id   NUMERIC GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		title     NVARCHAR2(30),
		price     DECIMAL(8,2),
		amount    NUMERIC
);


---Создание таблицы BOOK-GENRE - жанры
CREATE TABLE book_genre
(
		genre_id   NUMERIC,
		book_id    NUMERIC,
		CONSTRAINT "FK_book_genre_GENRE"
			FOREIGN KEY (genre_id) REFERENCES genre(genre_id) 
					ON DELETE CASCADE,
		CONSTRAINT "FK_book_genre_BOOK"
			FOREIGN KEY (book_id) REFERENCES book(book_id) 
					ON DELETE CASCADE
);


---Создание таблицы AUTHOR
CREATE TABLE author
(
		author_id       NUMERIC GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		name_author     NVARCHAR2(20),
		surname_author  NVARCHAR2(20),
		othc_author     NVARCHAR2(20) DEFAULT NULL
);


---Создание таблицы AUTHORS AND BOOKS
CREATE TABLE book_author
(
		author_id   NUMERIC  NOT NULL,
		book_id     NUMERIC  NOT NULL,

		CONSTRAINT "FK_book_author_AUTHOR"
			FOREIGN KEY (author_id) REFERENCES author(author_id) 
					ON DELETE CASCADE,

		CONSTRAINT "FK_book_author_BOOK"
			FOREIGN KEY (book_id)   REFERENCES book(book_id) 
					ON DELETE CASCADE
);


---Создание таблицы CITY - города в которых живут клиенты
CREATE TABLE city
(
		city_id       NUMERIC GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		name_city     NVARCHAR2(30)
);


---Создание таблицы STREET - улицы
CREATE TABLE street
(
		street_id       NUMERIC GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		street_name     NVARCHAR2(30)
);


---Создание таблицы STREET - улицы
CREATE TABLE delivery_point
(
		delivery_point_id NUMERIC GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		street_id         NUMERIC,
		city_id           NUMERIC,
		home_number       NUMERIC,

		CONSTRAINT "FK_delivery_point_CITY"
			FOREIGN KEY (city_id)   REFERENCES city(city_id) 
					ON DELETE CASCADE,

		CONSTRAINT "FK_delivery_point_STREET"
			FOREIGN KEY (city_id)   REFERENCES street(street_id) 
					ON DELETE CASCADE

);


---Создание таблицы DELIVERY TYPE создание способа доставки
CREATE TABLE delivery_type
(
		delivery_type_id   NUMERIC GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		delivery_type_name NVARCHAR2(30)
);


CREATE TABLE client
(
		client_id         NUMERIC GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		name_client       NVARCHAR2(20), 
		surname_client    NVARCHAR2(20), 
		email_clinet      NVARCHAR2(30), 
		phone_client      NVARCHAR2(15), 
		password_client   NVARCHAR2(50), 
		client_discount   INT DEFAULT 0, 
		city_id           NUMERIC, 
		street_id         NUMERIC,

		CONSTRAINT "FK_client_CITY"
			FOREIGN KEY (city_id)   REFERENCES city(city_id) 
					ON DELETE CASCADE,

		CONSTRAINT "FK_client_STREET"
			FOREIGN KEY (city_id)   REFERENCES street(street_id) 
					ON DELETE CASCADE
);


 ---Таблица Заказы orders
CREATE TABLE orders
(
		order_id          NUMERIC GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		order_comment     NVARCHAR2(255),
		client_id         NUMERIC,
		order_price       NUMERIC,
		delivery_type_id  NUMERIC,
		delivery_point_id NUMERIC,
		payment_date      DATE,
		client_discount   INT DEFAULT 0,

		CONSTRAINT "FK_orders_client"
				FOREIGN KEY (client_id) REFERENCES client (client_id),
		CONSTRAINT "FK_orders_delivery_type_id"
				FOREIGN KEY (delivery_type_id) REFERENCES delivery_type (delivery_type_id),
		CONSTRAINT "FK_orders_delivery_point_id"
				FOREIGN KEY (delivery_point_id) REFERENCES delivery_point (delivery_point_id)

);


---Создание таблицы ORDER_BOOK - заказы книг
CREATE TABLE book_order 
(
		order_id         NUMERIC,
		book_id          NUMERIC,
		amount           NUMERIC,
		price            NUMERIC,
		product_discount NUMERIC DEFAULT NULL,

		CONSTRAINT "FK_order_book_order"
				FOREIGN KEY (order_id) REFERENCES orders (order_id),
		CONSTRAINT "FK_order_book_from_book"
				FOREIGN KEY (book_id) REFERENCES book (book_id),

		CONSTRAINT PK_book_order PRIMARY KEY (order_id, book_id)
);


---Создание таблицы Шаги заказа - STEP
CREATE TABLE step
(
		step_id   NUMERIC  GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
		name_step NVARCHAR2(30)
);


---Создание таблицы ORDER_STEP - шаги заказа
CREATE TABLE order_step
(
		order_id         NUMERIC,
		step_id          NUMERIC,
		order_start_date DATE,
		order_end_date   DATE,

		CONSTRAINT "FK_order_step_order"
				FOREIGN KEY (order_id) REFERENCES orders (order_id),
		CONSTRAINT "FK_order_step_step"
				FOREIGN KEY (step_id) REFERENCES step (step_id),
		
		CONSTRAINT PK_order_step PRIMARY KEY (order_id, step_id)
);